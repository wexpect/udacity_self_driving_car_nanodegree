1. download from official python website

python3 -m venv env
source env/bin/active

pip install --upgrade pip

pip install jupyter
pip install numpy pandas scikit-learn matplotlib pillow tqdm seaborn

pip install moviepy
pip install PyQt5

# install albumentations
pip install opencv-python==4.5.1.48
pip install opencv-python-headless==4.5.1.48
pip install scikit-image==0.17.2
pip install albumentations

# install latest version
pip install tensorflow

pip3 install --upgrade https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-1.6.0-py3-none-any.whl

pip install keras  


pip install easydict
pip install shapely


# after upgrade to MacOS Montery 12.0.1, can install directly
pip3 install open3d




pip3 install opencv-python

# after install, if have error when importing
>>> import cv2
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/rui/env/lib/python3.6/site-packages/cv2/__init__.py", line 4, in <module>
    from .cv2 import *
ImportError: dlopen(/Users/rui/env/lib/python3.6/site-packages/cv2/cv2.cpython-36m-darwin.so, 2): Library not loaded: /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage
  Referenced from: /Users/rui/env/lib/python3.6/site-packages/cv2/.dylibs/libavcodec.57.107.100.dylib
  Reason: image not found


then install downgreade version
	pip uninstall opencv-python
	pip3 install opencv-python==3.2.0.6





# Git is not working after macOS Update (xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools)
https://stackoverflow.com/questions/52522565/git-is-not-working-after-macos-update-xcrun-error-invalid-active-developer-pa

xcode-select --install






http://google.github.io/proto-lens/installing-protoc.html
brew install protobuf

PROTOC_ZIP=protoc-3.14.0-osx-x86_64.zip
curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v3.14.0/$PROTOC_ZIP
sudo unzip -o $PROTOC_ZIP -d /usr/local bin/protoc
sudo unzip -o $PROTOC_ZIP -d /usr/local 'include/*'
rm -f $PROTOC_ZIP




https://docs.bazel.build/versions/main/install-os-x.html
# Example installing version `3.2.0`. Replace the version below as appropriate.
export BAZEL_VERSION=3.2.0
curl -fLO "https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-darwin-x86_64.sh"

chmod +x "bazel-${BAZEL_VERSION}-installer-darwin-x86_64.sh"
./bazel-${BAZEL_VERSION}-installer-darwin-x86_64.sh --user

export PATH="$PATH:$HOME/bin"
bazel --version





https://github.com/tensorflow/models/tree/master/official
pip install tf-models-official


https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/tf2.md
git clone https://github.com/tensorflow/models.git

cd models/research
# Compile protos.
protoc object_detection/protos/*.proto --python_out=.
# Install TensorFlow Object Detection API.
cp object_detection/packages/tf2/setup.py .
# there is no tensorflow_io version for Mac
python -m pip install --use-feature=2020-resolver .



pip install udacity-pa

udacity submit




# OpenAI Gym

git clone https://github.com/openai/gym.git
cd gym
pip install -e .

pip install -e '.[classic_control]'

cd examples/agents
python random_agent.py


# for openai-gym to show images correctly
# download brew
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

# install libx264 (not 265)
brew install ffmpeg --with-fdk-aac --with-ffplay --with-freetype --with-libass --with-libquvi --with-libvorbis --with-libvpx --with-opus --with-x265

